// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: cloud/blockstore/public/api/protos/endpoints.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TStartEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Unix-socket path.
	UnixSocketPath string `protobuf:"bytes,2,opt,name=UnixSocketPath,proto3" json:"UnixSocketPath,omitempty"`
	// Label of volume to mount.
	DiskId string `protobuf:"bytes,3,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// VM information.
	InstanceId string `protobuf:"bytes,4,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	// Volume access mode.
	VolumeAccessMode EVolumeAccessMode `protobuf:"varint,5,opt,name=VolumeAccessMode,proto3,enum=NCloud.NBlockStore.NProto.EVolumeAccessMode" json:"VolumeAccessMode,omitempty"`
	// Volume mount mode.
	VolumeMountMode EVolumeMountMode `protobuf:"varint,6,opt,name=VolumeMountMode,proto3,enum=NCloud.NBlockStore.NProto.EVolumeMountMode" json:"VolumeMountMode,omitempty"`
	// IPC type used by client.
	IpcType EClientIpcType `protobuf:"varint,7,opt,name=IpcType,proto3,enum=NCloud.NBlockStore.NProto.EClientIpcType" json:"IpcType,omitempty"`
	// Client version info.
	ClientVersionInfo string `protobuf:"bytes,8,opt,name=ClientVersionInfo,proto3" json:"ClientVersionInfo,omitempty"`
	// Obsolete, use MountFlags instead.
	ThrottlingDisabled bool `protobuf:"varint,9,opt,name=ThrottlingDisabled,proto3" json:"ThrottlingDisabled,omitempty"`
	// Volume generation.
	MountSeqNumber uint64 `protobuf:"varint,10,opt,name=MountSeqNumber,proto3" json:"MountSeqNumber,omitempty"`
	// Client identifier.
	ClientId string `protobuf:"bytes,11,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	// Client profile
	ClientProfile *TClientProfile `protobuf:"bytes,12,opt,name=ClientProfile,proto3" json:"ClientProfile,omitempty"`
	// Client performance profile
	ClientPerformanceProfile *TClientPerformanceProfile `protobuf:"bytes,13,opt,name=ClientPerformanceProfile,proto3" json:"ClientPerformanceProfile,omitempty"`
	// Vhost queues count.
	VhostQueuesCount uint32 `protobuf:"varint,14,opt,name=VhostQueuesCount,proto3" json:"VhostQueuesCount,omitempty"`
	// Request timeout for a single request attempt (in milliseconds).
	RequestTimeout uint32 `protobuf:"varint,15,opt,name=RequestTimeout,proto3" json:"RequestTimeout,omitempty"`
	// Total request timeout - for all attempts plus total backoff time (in milliseconds).
	RetryTimeout uint32 `protobuf:"varint,16,opt,name=RetryTimeout,proto3" json:"RetryTimeout,omitempty"`
	// Backoff time increment for each attempt (in milliseconds).
	RetryTimeoutIncrement uint32 `protobuf:"varint,17,opt,name=RetryTimeoutIncrement,proto3" json:"RetryTimeoutIncrement,omitempty"`
	// Unaligned request support can be explicitly disabled.
	UnalignedRequestsDisabled bool `protobuf:"varint,18,opt,name=UnalignedRequestsDisabled,proto3" json:"UnalignedRequestsDisabled,omitempty"`
	// Volume encryption spec.
	EncryptionSpec *TEncryptionSpec `protobuf:"bytes,19,opt,name=EncryptionSpec,proto3" json:"EncryptionSpec,omitempty"`
	// Send MinBlockSize to NBD-client (NBS-2250).
	SendNbdMinBlockSize bool `protobuf:"varint,20,opt,name=SendNbdMinBlockSize,proto3" json:"SendNbdMinBlockSize,omitempty"`
	// Mount flags.
	MountFlags uint32 `protobuf:"varint,21,opt,name=MountFlags,proto3" json:"MountFlags,omitempty"`
	// Device name for vhost endpoints.
	DeviceName string `protobuf:"bytes,22,opt,name=DeviceName,proto3" json:"DeviceName,omitempty"`
	// Client's cgroups
	ClientCGroups []string `protobuf:"bytes,23,rep,name=ClientCGroups,proto3" json:"ClientCGroups,omitempty"`
}

func (x *TStartEndpointRequest) Reset() {
	*x = TStartEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartEndpointRequest) ProtoMessage() {}

func (x *TStartEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartEndpointRequest.ProtoReflect.Descriptor instead.
func (*TStartEndpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{0}
}

func (x *TStartEndpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TStartEndpointRequest) GetUnixSocketPath() string {
	if x != nil {
		return x.UnixSocketPath
	}
	return ""
}

func (x *TStartEndpointRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TStartEndpointRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *TStartEndpointRequest) GetVolumeAccessMode() EVolumeAccessMode {
	if x != nil {
		return x.VolumeAccessMode
	}
	return EVolumeAccessMode_VOLUME_ACCESS_READ_WRITE
}

func (x *TStartEndpointRequest) GetVolumeMountMode() EVolumeMountMode {
	if x != nil {
		return x.VolumeMountMode
	}
	return EVolumeMountMode_VOLUME_MOUNT_LOCAL
}

func (x *TStartEndpointRequest) GetIpcType() EClientIpcType {
	if x != nil {
		return x.IpcType
	}
	return EClientIpcType_IPC_GRPC
}

func (x *TStartEndpointRequest) GetClientVersionInfo() string {
	if x != nil {
		return x.ClientVersionInfo
	}
	return ""
}

func (x *TStartEndpointRequest) GetThrottlingDisabled() bool {
	if x != nil {
		return x.ThrottlingDisabled
	}
	return false
}

func (x *TStartEndpointRequest) GetMountSeqNumber() uint64 {
	if x != nil {
		return x.MountSeqNumber
	}
	return 0
}

func (x *TStartEndpointRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TStartEndpointRequest) GetClientProfile() *TClientProfile {
	if x != nil {
		return x.ClientProfile
	}
	return nil
}

func (x *TStartEndpointRequest) GetClientPerformanceProfile() *TClientPerformanceProfile {
	if x != nil {
		return x.ClientPerformanceProfile
	}
	return nil
}

func (x *TStartEndpointRequest) GetVhostQueuesCount() uint32 {
	if x != nil {
		return x.VhostQueuesCount
	}
	return 0
}

func (x *TStartEndpointRequest) GetRequestTimeout() uint32 {
	if x != nil {
		return x.RequestTimeout
	}
	return 0
}

func (x *TStartEndpointRequest) GetRetryTimeout() uint32 {
	if x != nil {
		return x.RetryTimeout
	}
	return 0
}

func (x *TStartEndpointRequest) GetRetryTimeoutIncrement() uint32 {
	if x != nil {
		return x.RetryTimeoutIncrement
	}
	return 0
}

func (x *TStartEndpointRequest) GetUnalignedRequestsDisabled() bool {
	if x != nil {
		return x.UnalignedRequestsDisabled
	}
	return false
}

func (x *TStartEndpointRequest) GetEncryptionSpec() *TEncryptionSpec {
	if x != nil {
		return x.EncryptionSpec
	}
	return nil
}

func (x *TStartEndpointRequest) GetSendNbdMinBlockSize() bool {
	if x != nil {
		return x.SendNbdMinBlockSize
	}
	return false
}

func (x *TStartEndpointRequest) GetMountFlags() uint32 {
	if x != nil {
		return x.MountFlags
	}
	return 0
}

func (x *TStartEndpointRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *TStartEndpointRequest) GetClientCGroups() []string {
	if x != nil {
		return x.ClientCGroups
	}
	return nil
}

type TStartEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Volume information.
	Volume *TVolume `protobuf:"bytes,2,opt,name=Volume,proto3" json:"Volume,omitempty"`
}

func (x *TStartEndpointResponse) Reset() {
	*x = TStartEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartEndpointResponse) ProtoMessage() {}

func (x *TStartEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartEndpointResponse.ProtoReflect.Descriptor instead.
func (*TStartEndpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{1}
}

func (x *TStartEndpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TStartEndpointResponse) GetVolume() *TVolume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type TStopEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Unix-socket path.
	UnixSocketPath string `protobuf:"bytes,2,opt,name=UnixSocketPath,proto3" json:"UnixSocketPath,omitempty"`
}

func (x *TStopEndpointRequest) Reset() {
	*x = TStopEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopEndpointRequest) ProtoMessage() {}

func (x *TStopEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopEndpointRequest.ProtoReflect.Descriptor instead.
func (*TStopEndpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{2}
}

func (x *TStopEndpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TStopEndpointRequest) GetUnixSocketPath() string {
	if x != nil {
		return x.UnixSocketPath
	}
	return ""
}

type TStopEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TStopEndpointResponse) Reset() {
	*x = TStopEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopEndpointResponse) ProtoMessage() {}

func (x *TStopEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopEndpointResponse.ProtoReflect.Descriptor instead.
func (*TStopEndpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{3}
}

func (x *TStopEndpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TListEndpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TListEndpointsRequest) Reset() {
	*x = TListEndpointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListEndpointsRequest) ProtoMessage() {}

func (x *TListEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListEndpointsRequest.ProtoReflect.Descriptor instead.
func (*TListEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{4}
}

func (x *TListEndpointsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TListEndpointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// List of endpoints.
	Endpoints []*TStartEndpointRequest `protobuf:"bytes,2,rep,name=Endpoints,proto3" json:"Endpoints,omitempty"`
	// Endpoints restoring status.
	EndpointsWereRestored bool `protobuf:"varint,3,opt,name=EndpointsWereRestored,proto3" json:"EndpointsWereRestored,omitempty"`
}

func (x *TListEndpointsResponse) Reset() {
	*x = TListEndpointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListEndpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListEndpointsResponse) ProtoMessage() {}

func (x *TListEndpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListEndpointsResponse.ProtoReflect.Descriptor instead.
func (*TListEndpointsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{5}
}

func (x *TListEndpointsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TListEndpointsResponse) GetEndpoints() []*TStartEndpointRequest {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *TListEndpointsResponse) GetEndpointsWereRestored() bool {
	if x != nil {
		return x.EndpointsWereRestored
	}
	return false
}

type TKickEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Keyring identifier.
	KeyringId uint32 `protobuf:"varint,2,opt,name=KeyringId,proto3" json:"KeyringId,omitempty"`
}

func (x *TKickEndpointRequest) Reset() {
	*x = TKickEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TKickEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TKickEndpointRequest) ProtoMessage() {}

func (x *TKickEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TKickEndpointRequest.ProtoReflect.Descriptor instead.
func (*TKickEndpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{6}
}

func (x *TKickEndpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TKickEndpointRequest) GetKeyringId() uint32 {
	if x != nil {
		return x.KeyringId
	}
	return 0
}

type TKickEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TKickEndpointResponse) Reset() {
	*x = TKickEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TKickEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TKickEndpointResponse) ProtoMessage() {}

func (x *TKickEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TKickEndpointResponse.ProtoReflect.Descriptor instead.
func (*TKickEndpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{7}
}

func (x *TKickEndpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TListKeyringsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TListKeyringsRequest) Reset() {
	*x = TListKeyringsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListKeyringsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListKeyringsRequest) ProtoMessage() {}

func (x *TListKeyringsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListKeyringsRequest.ProtoReflect.Descriptor instead.
func (*TListKeyringsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{8}
}

func (x *TListKeyringsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TListKeyringsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// List of keyring endpoints.
	Endpoints []*TListKeyringsResponse_TKeyringEndpoint `protobuf:"bytes,2,rep,name=Endpoints,proto3" json:"Endpoints,omitempty"`
}

func (x *TListKeyringsResponse) Reset() {
	*x = TListKeyringsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListKeyringsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListKeyringsResponse) ProtoMessage() {}

func (x *TListKeyringsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListKeyringsResponse.ProtoReflect.Descriptor instead.
func (*TListKeyringsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{9}
}

func (x *TListKeyringsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TListKeyringsResponse) GetEndpoints() []*TListKeyringsResponse_TKeyringEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type TDescribeEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Unix-socket path.
	UnixSocketPath string `protobuf:"bytes,2,opt,name=UnixSocketPath,proto3" json:"UnixSocketPath,omitempty"`
}

func (x *TDescribeEndpointRequest) Reset() {
	*x = TDescribeEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribeEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribeEndpointRequest) ProtoMessage() {}

func (x *TDescribeEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribeEndpointRequest.ProtoReflect.Descriptor instead.
func (*TDescribeEndpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{10}
}

func (x *TDescribeEndpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TDescribeEndpointRequest) GetUnixSocketPath() string {
	if x != nil {
		return x.UnixSocketPath
	}
	return ""
}

type TDescribeEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Client performance profile.
	PerformanceProfile *TClientPerformanceProfile `protobuf:"bytes,2,opt,name=PerformanceProfile,proto3" json:"PerformanceProfile,omitempty"`
}

func (x *TDescribeEndpointResponse) Reset() {
	*x = TDescribeEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribeEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribeEndpointResponse) ProtoMessage() {}

func (x *TDescribeEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribeEndpointResponse.ProtoReflect.Descriptor instead.
func (*TDescribeEndpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{11}
}

func (x *TDescribeEndpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TDescribeEndpointResponse) GetPerformanceProfile() *TClientPerformanceProfile {
	if x != nil {
		return x.PerformanceProfile
	}
	return nil
}

type TRefreshEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Unix-socket path.
	UnixSocketPath string `protobuf:"bytes,2,opt,name=UnixSocketPath,proto3" json:"UnixSocketPath,omitempty"`
}

func (x *TRefreshEndpointRequest) Reset() {
	*x = TRefreshEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRefreshEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRefreshEndpointRequest) ProtoMessage() {}

func (x *TRefreshEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRefreshEndpointRequest.ProtoReflect.Descriptor instead.
func (*TRefreshEndpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{12}
}

func (x *TRefreshEndpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TRefreshEndpointRequest) GetUnixSocketPath() string {
	if x != nil {
		return x.UnixSocketPath
	}
	return ""
}

type TRefreshEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TRefreshEndpointResponse) Reset() {
	*x = TRefreshEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRefreshEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRefreshEndpointResponse) ProtoMessage() {}

func (x *TRefreshEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRefreshEndpointResponse.ProtoReflect.Descriptor instead.
func (*TRefreshEndpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{13}
}

func (x *TRefreshEndpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TListKeyringsResponse_TKeyringEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyringId uint32                 `protobuf:"varint,1,opt,name=KeyringId,proto3" json:"KeyringId,omitempty"`
	Request   *TStartEndpointRequest `protobuf:"bytes,2,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TListKeyringsResponse_TKeyringEndpoint) Reset() {
	*x = TListKeyringsResponse_TKeyringEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListKeyringsResponse_TKeyringEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListKeyringsResponse_TKeyringEndpoint) ProtoMessage() {}

func (x *TListKeyringsResponse_TKeyringEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListKeyringsResponse_TKeyringEndpoint.ProtoReflect.Descriptor instead.
func (*TListKeyringsResponse_TKeyringEndpoint) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TListKeyringsResponse_TKeyringEndpoint) GetKeyringId() uint32 {
	if x != nil {
		return x.KeyringId
	}
	return 0
}

func (x *TListKeyringsResponse_TKeyringEndpoint) GetRequest() *TStartEndpointRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

var File_cloud_blockstore_public_api_protos_endpoints_proto protoreflect.FileDescriptor

var file_cloud_blockstore_public_api_protos_endpoints_proto_rawDesc = []byte{
	0x0a, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x33, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe9, 0x09, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x78,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x10, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x10, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x4e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x49, 0x70, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x49, 0x70, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12,
	0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74,
	0x6c, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x4f, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x70, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x68, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x56,
	0x68, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x19, 0x55, 0x6e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x55, 0x6e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x52, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65,
	0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x62, 0x64, 0x4d, 0x69,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x62, 0x64, 0x4d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x16,
	0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22,
	0x7d, 0x0a, 0x14, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x44,
	0x0a, 0x15, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x15, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xcb, 0x01, 0x0a,
	0x16, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x57, 0x65, 0x72, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x57, 0x65,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x22, 0x73, 0x0a, 0x14, 0x54, 0x4b,
	0x69, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x15, 0x54, 0x4b, 0x69, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x14, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65,
	0x79, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xa3, 0x02, 0x0a,
	0x15, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x1a, 0x7c, 0x0a, 0x10, 0x54, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4b, 0x65, 0x79,
	0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x54, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0xae, 0x01, 0x0a, 0x19, 0x54, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x64, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x54, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x6e, 0x69, 0x78,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x18, 0x54, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x35, 0x5a, 0x33, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescOnce sync.Once
	file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescData = file_cloud_blockstore_public_api_protos_endpoints_proto_rawDesc
)

func file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescData)
	})
	return file_cloud_blockstore_public_api_protos_endpoints_proto_rawDescData
}

var file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_cloud_blockstore_public_api_protos_endpoints_proto_goTypes = []interface{}{
	(*TStartEndpointRequest)(nil),                  // 0: NCloud.NBlockStore.NProto.TStartEndpointRequest
	(*TStartEndpointResponse)(nil),                 // 1: NCloud.NBlockStore.NProto.TStartEndpointResponse
	(*TStopEndpointRequest)(nil),                   // 2: NCloud.NBlockStore.NProto.TStopEndpointRequest
	(*TStopEndpointResponse)(nil),                  // 3: NCloud.NBlockStore.NProto.TStopEndpointResponse
	(*TListEndpointsRequest)(nil),                  // 4: NCloud.NBlockStore.NProto.TListEndpointsRequest
	(*TListEndpointsResponse)(nil),                 // 5: NCloud.NBlockStore.NProto.TListEndpointsResponse
	(*TKickEndpointRequest)(nil),                   // 6: NCloud.NBlockStore.NProto.TKickEndpointRequest
	(*TKickEndpointResponse)(nil),                  // 7: NCloud.NBlockStore.NProto.TKickEndpointResponse
	(*TListKeyringsRequest)(nil),                   // 8: NCloud.NBlockStore.NProto.TListKeyringsRequest
	(*TListKeyringsResponse)(nil),                  // 9: NCloud.NBlockStore.NProto.TListKeyringsResponse
	(*TDescribeEndpointRequest)(nil),               // 10: NCloud.NBlockStore.NProto.TDescribeEndpointRequest
	(*TDescribeEndpointResponse)(nil),              // 11: NCloud.NBlockStore.NProto.TDescribeEndpointResponse
	(*TRefreshEndpointRequest)(nil),                // 12: NCloud.NBlockStore.NProto.TRefreshEndpointRequest
	(*TRefreshEndpointResponse)(nil),               // 13: NCloud.NBlockStore.NProto.TRefreshEndpointResponse
	(*TListKeyringsResponse_TKeyringEndpoint)(nil), // 14: NCloud.NBlockStore.NProto.TListKeyringsResponse.TKeyringEndpoint
	(*THeaders)(nil),                               // 15: NCloud.NBlockStore.NProto.THeaders
	(EVolumeAccessMode)(0),                         // 16: NCloud.NBlockStore.NProto.EVolumeAccessMode
	(EVolumeMountMode)(0),                          // 17: NCloud.NBlockStore.NProto.EVolumeMountMode
	(EClientIpcType)(0),                            // 18: NCloud.NBlockStore.NProto.EClientIpcType
	(*TClientProfile)(nil),                         // 19: NCloud.NBlockStore.NProto.TClientProfile
	(*TClientPerformanceProfile)(nil),              // 20: NCloud.NBlockStore.NProto.TClientPerformanceProfile
	(*TEncryptionSpec)(nil),                        // 21: NCloud.NBlockStore.NProto.TEncryptionSpec
	(*protos.TError)(nil),                          // 22: NCloud.NProto.TError
	(*TVolume)(nil),                                // 23: NCloud.NBlockStore.NProto.TVolume
}
var file_cloud_blockstore_public_api_protos_endpoints_proto_depIdxs = []int32{
	15, // 0: NCloud.NBlockStore.NProto.TStartEndpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	16, // 1: NCloud.NBlockStore.NProto.TStartEndpointRequest.VolumeAccessMode:type_name -> NCloud.NBlockStore.NProto.EVolumeAccessMode
	17, // 2: NCloud.NBlockStore.NProto.TStartEndpointRequest.VolumeMountMode:type_name -> NCloud.NBlockStore.NProto.EVolumeMountMode
	18, // 3: NCloud.NBlockStore.NProto.TStartEndpointRequest.IpcType:type_name -> NCloud.NBlockStore.NProto.EClientIpcType
	19, // 4: NCloud.NBlockStore.NProto.TStartEndpointRequest.ClientProfile:type_name -> NCloud.NBlockStore.NProto.TClientProfile
	20, // 5: NCloud.NBlockStore.NProto.TStartEndpointRequest.ClientPerformanceProfile:type_name -> NCloud.NBlockStore.NProto.TClientPerformanceProfile
	21, // 6: NCloud.NBlockStore.NProto.TStartEndpointRequest.EncryptionSpec:type_name -> NCloud.NBlockStore.NProto.TEncryptionSpec
	22, // 7: NCloud.NBlockStore.NProto.TStartEndpointResponse.Error:type_name -> NCloud.NProto.TError
	23, // 8: NCloud.NBlockStore.NProto.TStartEndpointResponse.Volume:type_name -> NCloud.NBlockStore.NProto.TVolume
	15, // 9: NCloud.NBlockStore.NProto.TStopEndpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 10: NCloud.NBlockStore.NProto.TStopEndpointResponse.Error:type_name -> NCloud.NProto.TError
	15, // 11: NCloud.NBlockStore.NProto.TListEndpointsRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 12: NCloud.NBlockStore.NProto.TListEndpointsResponse.Error:type_name -> NCloud.NProto.TError
	0,  // 13: NCloud.NBlockStore.NProto.TListEndpointsResponse.Endpoints:type_name -> NCloud.NBlockStore.NProto.TStartEndpointRequest
	15, // 14: NCloud.NBlockStore.NProto.TKickEndpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 15: NCloud.NBlockStore.NProto.TKickEndpointResponse.Error:type_name -> NCloud.NProto.TError
	15, // 16: NCloud.NBlockStore.NProto.TListKeyringsRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 17: NCloud.NBlockStore.NProto.TListKeyringsResponse.Error:type_name -> NCloud.NProto.TError
	14, // 18: NCloud.NBlockStore.NProto.TListKeyringsResponse.Endpoints:type_name -> NCloud.NBlockStore.NProto.TListKeyringsResponse.TKeyringEndpoint
	15, // 19: NCloud.NBlockStore.NProto.TDescribeEndpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 20: NCloud.NBlockStore.NProto.TDescribeEndpointResponse.Error:type_name -> NCloud.NProto.TError
	20, // 21: NCloud.NBlockStore.NProto.TDescribeEndpointResponse.PerformanceProfile:type_name -> NCloud.NBlockStore.NProto.TClientPerformanceProfile
	15, // 22: NCloud.NBlockStore.NProto.TRefreshEndpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	22, // 23: NCloud.NBlockStore.NProto.TRefreshEndpointResponse.Error:type_name -> NCloud.NProto.TError
	0,  // 24: NCloud.NBlockStore.NProto.TListKeyringsResponse.TKeyringEndpoint.Request:type_name -> NCloud.NBlockStore.NProto.TStartEndpointRequest
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_public_api_protos_endpoints_proto_init() }
func file_cloud_blockstore_public_api_protos_endpoints_proto_init() {
	if File_cloud_blockstore_public_api_protos_endpoints_proto != nil {
		return
	}
	file_cloud_blockstore_public_api_protos_client_proto_init()
	file_cloud_blockstore_public_api_protos_encryption_proto_init()
	file_cloud_blockstore_public_api_protos_headers_proto_init()
	file_cloud_blockstore_public_api_protos_mount_proto_init()
	file_cloud_blockstore_public_api_protos_volume_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListEndpointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListEndpointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TKickEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TKickEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListKeyringsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListKeyringsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribeEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribeEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRefreshEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRefreshEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListKeyringsResponse_TKeyringEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_public_api_protos_endpoints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_public_api_protos_endpoints_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_public_api_protos_endpoints_proto_depIdxs,
		MessageInfos:      file_cloud_blockstore_public_api_protos_endpoints_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_public_api_protos_endpoints_proto = out.File
	file_cloud_blockstore_public_api_protos_endpoints_proto_rawDesc = nil
	file_cloud_blockstore_public_api_protos_endpoints_proto_goTypes = nil
	file_cloud_blockstore_public_api_protos_endpoints_proto_depIdxs = nil
}
