syntax = "proto3";

import "cloud/blockstore/public/api/protos/headers.proto";
import "cloud/storage/core/protos/error.proto";

package NCloud.NBlockStore.NProto;

option go_package = "github.com/ydb-platform/nbs/cloud/blockstore/public/api/protos";

////////////////////////////////////////////////////////////////////////////////
// Discovery instance filter.

enum EDiscoveryPortFilter
{
    DISCOVERY_INSECURE_PORT = 0;
    DISCOVERY_SECURE_PORT = 1;
    DISCOVERY_ANY_PORT = 2;
}

////////////////////////////////////////////////////////////////////////////////
// Discovered instance information.

message TDiscoveredInstance
{
    // Instance hostname.
    string Host = 1;

    // GRPC port.
    uint32 Port = 2;
}

////////////////////////////////////////////////////////////////////////////////
// Obtain a list of available NBS instances

message TDiscoverInstancesRequest
{
    // Optional request headers.
    THeaders Headers = 1;

    // Instance limit in response.
    uint32 Limit = 2;

    // Filter instances by port type
    EDiscoveryPortFilter InstanceFilter = 3;
}

message TDiscoverInstancesResponse
{
    // Optional error, set only if error happened.
    NCloud.NProto.TError Error = 1;

    // Multiple NBS instances are returned - the client can choose any of them
    // Might be useful in case of network problems between the client and some
    // of the instances. The client should try to connect to the first instance
    // from this list. If connection fails, the client should try to connect
    // to the second instance, and so on.
    repeated TDiscoveredInstance Instances = 2;
}
