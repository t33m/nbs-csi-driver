// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: cloud/blockstore/public/api/protos/checkpoints.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECheckpointType int32

const (
	ECheckpointType_NORMAL       ECheckpointType = 0 // Usual checkpoint.
	ECheckpointType_LIGHT        ECheckpointType = 1 // Checkpoint only for collect used blocks.
	ECheckpointType_WITHOUT_DATA ECheckpointType = 2 // Normal checkpoint without data.
)

// Enum value maps for ECheckpointType.
var (
	ECheckpointType_name = map[int32]string{
		0: "NORMAL",
		1: "LIGHT",
		2: "WITHOUT_DATA",
	}
	ECheckpointType_value = map[string]int32{
		"NORMAL":       0,
		"LIGHT":        1,
		"WITHOUT_DATA": 2,
	}
)

func (x ECheckpointType) Enum() *ECheckpointType {
	p := new(ECheckpointType)
	*p = x
	return p
}

func (x ECheckpointType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECheckpointType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_enumTypes[0].Descriptor()
}

func (ECheckpointType) Type() protoreflect.EnumType {
	return &file_cloud_blockstore_public_api_protos_checkpoints_proto_enumTypes[0]
}

func (x ECheckpointType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECheckpointType.Descriptor instead.
func (ECheckpointType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{0}
}

type TCreateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Label of volume to create checkpoint on.
	DiskId string `protobuf:"bytes,2,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Checkpoint identifier.
	CheckpointId string `protobuf:"bytes,3,opt,name=CheckpointId,proto3" json:"CheckpointId,omitempty"`
	// Light checkpoint.
	// Checkpoint only for collect used blocks.
	// Deprecated, use CheckpointType = ECheckpointType::LIGHT.
	//
	// Deprecated: Do not use.
	IsLight bool `protobuf:"varint,4,opt,name=IsLight,proto3" json:"IsLight,omitempty"`
	// Checkpoint type to create (IsLight will be deprecated).
	CheckpointType ECheckpointType `protobuf:"varint,5,opt,name=CheckpointType,proto3,enum=NCloud.NBlockStore.NProto.ECheckpointType" json:"CheckpointType,omitempty"`
}

func (x *TCreateCheckpointRequest) Reset() {
	*x = TCreateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreateCheckpointRequest) ProtoMessage() {}

func (x *TCreateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*TCreateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{0}
}

func (x *TCreateCheckpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TCreateCheckpointRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TCreateCheckpointRequest) GetCheckpointId() string {
	if x != nil {
		return x.CheckpointId
	}
	return ""
}

// Deprecated: Do not use.
func (x *TCreateCheckpointRequest) GetIsLight() bool {
	if x != nil {
		return x.IsLight
	}
	return false
}

func (x *TCreateCheckpointRequest) GetCheckpointType() ECheckpointType {
	if x != nil {
		return x.CheckpointType
	}
	return ECheckpointType_NORMAL
}

type TCreateCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Request traces.
	Trace *protos.TTraceInfo `protobuf:"bytes,2,opt,name=Trace,proto3" json:"Trace,omitempty"`
}

func (x *TCreateCheckpointResponse) Reset() {
	*x = TCreateCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreateCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreateCheckpointResponse) ProtoMessage() {}

func (x *TCreateCheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreateCheckpointResponse.ProtoReflect.Descriptor instead.
func (*TCreateCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{1}
}

func (x *TCreateCheckpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TCreateCheckpointResponse) GetTrace() *protos.TTraceInfo {
	if x != nil {
		return x.Trace
	}
	return nil
}

type TDeleteCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Label of volume to delete checkpoint from.
	DiskId string `protobuf:"bytes,2,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Checkpoint identifier.
	CheckpointId string `protobuf:"bytes,3,opt,name=CheckpointId,proto3" json:"CheckpointId,omitempty"`
}

func (x *TDeleteCheckpointRequest) Reset() {
	*x = TDeleteCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeleteCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeleteCheckpointRequest) ProtoMessage() {}

func (x *TDeleteCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeleteCheckpointRequest.ProtoReflect.Descriptor instead.
func (*TDeleteCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{2}
}

func (x *TDeleteCheckpointRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TDeleteCheckpointRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TDeleteCheckpointRequest) GetCheckpointId() string {
	if x != nil {
		return x.CheckpointId
	}
	return ""
}

type TDeleteCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Request traces.
	Trace *protos.TTraceInfo `protobuf:"bytes,2,opt,name=Trace,proto3" json:"Trace,omitempty"`
}

func (x *TDeleteCheckpointResponse) Reset() {
	*x = TDeleteCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeleteCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeleteCheckpointResponse) ProtoMessage() {}

func (x *TDeleteCheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeleteCheckpointResponse.ProtoReflect.Descriptor instead.
func (*TDeleteCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{3}
}

func (x *TDeleteCheckpointResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TDeleteCheckpointResponse) GetTrace() *protos.TTraceInfo {
	if x != nil {
		return x.Trace
	}
	return nil
}

type TGetChangedBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Label of volume.
	DiskId string `protobuf:"bytes,2,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Start block index.
	StartIndex uint64 `protobuf:"varint,3,opt,name=StartIndex,proto3" json:"StartIndex,omitempty"`
	// Number of blocks to check.
	BlocksCount uint32 `protobuf:"varint,4,opt,name=BlocksCount,proto3" json:"BlocksCount,omitempty"`
	// Checkpoint identifier.
	LowCheckpointId string `protobuf:"bytes,5,opt,name=LowCheckpointId,proto3" json:"LowCheckpointId,omitempty"`
	// Checkpoint identifier.
	HighCheckpointId string `protobuf:"bytes,6,opt,name=HighCheckpointId,proto3" json:"HighCheckpointId,omitempty"`
	// Only affects case when LowCheckpointId is not set.
	IgnoreBaseDisk bool `protobuf:"varint,7,opt,name=IgnoreBaseDisk,proto3" json:"IgnoreBaseDisk,omitempty"`
}

func (x *TGetChangedBlocksRequest) Reset() {
	*x = TGetChangedBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetChangedBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetChangedBlocksRequest) ProtoMessage() {}

func (x *TGetChangedBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetChangedBlocksRequest.ProtoReflect.Descriptor instead.
func (*TGetChangedBlocksRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{4}
}

func (x *TGetChangedBlocksRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TGetChangedBlocksRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TGetChangedBlocksRequest) GetStartIndex() uint64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *TGetChangedBlocksRequest) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

func (x *TGetChangedBlocksRequest) GetLowCheckpointId() string {
	if x != nil {
		return x.LowCheckpointId
	}
	return ""
}

func (x *TGetChangedBlocksRequest) GetHighCheckpointId() string {
	if x != nil {
		return x.HighCheckpointId
	}
	return ""
}

func (x *TGetChangedBlocksRequest) GetIgnoreBaseDisk() bool {
	if x != nil {
		return x.IgnoreBaseDisk
	}
	return false
}

type TGetChangedBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Bit mask where bit is set if block has changed between checkpoints.
	Mask []byte `protobuf:"bytes,2,opt,name=Mask,proto3" json:"Mask,omitempty"`
	// Request traces.
	Trace *protos.TTraceInfo `protobuf:"bytes,3,opt,name=Trace,proto3" json:"Trace,omitempty"`
}

func (x *TGetChangedBlocksResponse) Reset() {
	*x = TGetChangedBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetChangedBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetChangedBlocksResponse) ProtoMessage() {}

func (x *TGetChangedBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetChangedBlocksResponse.ProtoReflect.Descriptor instead.
func (*TGetChangedBlocksResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP(), []int{5}
}

func (x *TGetChangedBlocksResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TGetChangedBlocksResponse) GetMask() []byte {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *TGetChangedBlocksResponse) GetTrace() *protos.TTraceInfo {
	if x != nil {
		return x.Trace
	}
	return nil
}

var File_cloud_blockstore_public_api_protos_checkpoints_proto protoreflect.FileDescriptor

var file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDesc = []byte{
	0x0a, 0x34, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x30, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x87, 0x02, 0x0a, 0x18, 0x54, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44,
	0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x49, 0x73, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x19, 0x54,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x54, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x79,
	0x0a, 0x19, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x18, 0x54, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4c, 0x6f, 0x77, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x48, 0x69, 0x67,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x48, 0x69, 0x67, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x22, 0x8d, 0x01,
	0x0a, 0x19, 0x54, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x2f, 0x0a, 0x05,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x2a, 0x3a, 0x0a,
	0x0f, 0x45, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x49, 0x54, 0x48, 0x4f,
	0x55, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x42, 0x35, 0x5a, 0x33, 0x61, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescOnce sync.Once
	file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescData = file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDesc
)

func file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescData)
	})
	return file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDescData
}

var file_cloud_blockstore_public_api_protos_checkpoints_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cloud_blockstore_public_api_protos_checkpoints_proto_goTypes = []interface{}{
	(ECheckpointType)(0),              // 0: NCloud.NBlockStore.NProto.ECheckpointType
	(*TCreateCheckpointRequest)(nil),  // 1: NCloud.NBlockStore.NProto.TCreateCheckpointRequest
	(*TCreateCheckpointResponse)(nil), // 2: NCloud.NBlockStore.NProto.TCreateCheckpointResponse
	(*TDeleteCheckpointRequest)(nil),  // 3: NCloud.NBlockStore.NProto.TDeleteCheckpointRequest
	(*TDeleteCheckpointResponse)(nil), // 4: NCloud.NBlockStore.NProto.TDeleteCheckpointResponse
	(*TGetChangedBlocksRequest)(nil),  // 5: NCloud.NBlockStore.NProto.TGetChangedBlocksRequest
	(*TGetChangedBlocksResponse)(nil), // 6: NCloud.NBlockStore.NProto.TGetChangedBlocksResponse
	(*THeaders)(nil),                  // 7: NCloud.NBlockStore.NProto.THeaders
	(*protos.TError)(nil),             // 8: NCloud.NProto.TError
	(*protos.TTraceInfo)(nil),         // 9: NCloud.NProto.TTraceInfo
}
var file_cloud_blockstore_public_api_protos_checkpoints_proto_depIdxs = []int32{
	7,  // 0: NCloud.NBlockStore.NProto.TCreateCheckpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	0,  // 1: NCloud.NBlockStore.NProto.TCreateCheckpointRequest.CheckpointType:type_name -> NCloud.NBlockStore.NProto.ECheckpointType
	8,  // 2: NCloud.NBlockStore.NProto.TCreateCheckpointResponse.Error:type_name -> NCloud.NProto.TError
	9,  // 3: NCloud.NBlockStore.NProto.TCreateCheckpointResponse.Trace:type_name -> NCloud.NProto.TTraceInfo
	7,  // 4: NCloud.NBlockStore.NProto.TDeleteCheckpointRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	8,  // 5: NCloud.NBlockStore.NProto.TDeleteCheckpointResponse.Error:type_name -> NCloud.NProto.TError
	9,  // 6: NCloud.NBlockStore.NProto.TDeleteCheckpointResponse.Trace:type_name -> NCloud.NProto.TTraceInfo
	7,  // 7: NCloud.NBlockStore.NProto.TGetChangedBlocksRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	8,  // 8: NCloud.NBlockStore.NProto.TGetChangedBlocksResponse.Error:type_name -> NCloud.NProto.TError
	9,  // 9: NCloud.NBlockStore.NProto.TGetChangedBlocksResponse.Trace:type_name -> NCloud.NProto.TTraceInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_public_api_protos_checkpoints_proto_init() }
func file_cloud_blockstore_public_api_protos_checkpoints_proto_init() {
	if File_cloud_blockstore_public_api_protos_checkpoints_proto != nil {
		return
	}
	file_cloud_blockstore_public_api_protos_headers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreateCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeleteCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeleteCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetChangedBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetChangedBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_public_api_protos_checkpoints_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_public_api_protos_checkpoints_proto_depIdxs,
		EnumInfos:         file_cloud_blockstore_public_api_protos_checkpoints_proto_enumTypes,
		MessageInfos:      file_cloud_blockstore_public_api_protos_checkpoints_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_public_api_protos_checkpoints_proto = out.File
	file_cloud_blockstore_public_api_protos_checkpoints_proto_rawDesc = nil
	file_cloud_blockstore_public_api_protos_checkpoints_proto_goTypes = nil
	file_cloud_blockstore_public_api_protos_checkpoints_proto_depIdxs = nil
}
