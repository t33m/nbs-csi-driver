// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: cloud/blockstore/public/api/protos/placement.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EPlacementStrategy int32

const (
	EPlacementStrategy_PLACEMENT_STRATEGY_SPREAD    EPlacementStrategy = 0
	EPlacementStrategy_PLACEMENT_STRATEGY_PARTITION EPlacementStrategy = 1
)

// Enum value maps for EPlacementStrategy.
var (
	EPlacementStrategy_name = map[int32]string{
		0: "PLACEMENT_STRATEGY_SPREAD",
		1: "PLACEMENT_STRATEGY_PARTITION",
	}
	EPlacementStrategy_value = map[string]int32{
		"PLACEMENT_STRATEGY_SPREAD":    0,
		"PLACEMENT_STRATEGY_PARTITION": 1,
	}
)

func (x EPlacementStrategy) Enum() *EPlacementStrategy {
	p := new(EPlacementStrategy)
	*p = x
	return p
}

func (x EPlacementStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPlacementStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_blockstore_public_api_protos_placement_proto_enumTypes[0].Descriptor()
}

func (EPlacementStrategy) Type() protoreflect.EnumType {
	return &file_cloud_blockstore_public_api_protos_placement_proto_enumTypes[0]
}

func (x EPlacementStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPlacementStrategy.Descriptor instead.
func (EPlacementStrategy) EnumDescriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{0}
}

type TPlacementGroupSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max disk count override.
	MaxDisksInGroup uint32 `protobuf:"varint,1,opt,name=MaxDisksInGroup,proto3" json:"MaxDisksInGroup,omitempty"`
}

func (x *TPlacementGroupSettings) Reset() {
	*x = TPlacementGroupSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPlacementGroupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPlacementGroupSettings) ProtoMessage() {}

func (x *TPlacementGroupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPlacementGroupSettings.ProtoReflect.Descriptor instead.
func (*TPlacementGroupSettings) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{0}
}

func (x *TPlacementGroupSettings) GetMaxDisksInGroup() uint32 {
	if x != nil {
		return x.MaxDisksInGroup
	}
	return 0
}

type TPlacementGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the group.
	GroupId string `protobuf:"bytes,1,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	// Placement strategy.
	PlacementStrategy EPlacementStrategy `protobuf:"varint,2,opt,name=PlacementStrategy,proto3,enum=NCloud.NBlockStore.NProto.EPlacementStrategy" json:"PlacementStrategy,omitempty"`
	// Volume ids belonging to this group.
	DiskIds []string `protobuf:"bytes,3,rep,name=DiskIds,proto3" json:"DiskIds,omitempty"`
	// Current config version.
	ConfigVersion uint32 `protobuf:"varint,4,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	// Racks of all disks from this group.
	Racks []string `protobuf:"bytes,5,rep,name=Racks,proto3" json:"Racks,omitempty"`
	// Number of placement partitions.
	PlacementPartitionCount uint32 `protobuf:"varint,6,opt,name=PlacementPartitionCount,proto3" json:"PlacementPartitionCount,omitempty"`
}

func (x *TPlacementGroup) Reset() {
	*x = TPlacementGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPlacementGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPlacementGroup) ProtoMessage() {}

func (x *TPlacementGroup) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPlacementGroup.ProtoReflect.Descriptor instead.
func (*TPlacementGroup) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{1}
}

func (x *TPlacementGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TPlacementGroup) GetPlacementStrategy() EPlacementStrategy {
	if x != nil {
		return x.PlacementStrategy
	}
	return EPlacementStrategy_PLACEMENT_STRATEGY_SPREAD
}

func (x *TPlacementGroup) GetDiskIds() []string {
	if x != nil {
		return x.DiskIds
	}
	return nil
}

func (x *TPlacementGroup) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *TPlacementGroup) GetRacks() []string {
	if x != nil {
		return x.Racks
	}
	return nil
}

func (x *TPlacementGroup) GetPlacementPartitionCount() uint32 {
	if x != nil {
		return x.PlacementPartitionCount
	}
	return 0
}

type TCreatePlacementGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Id of the group.
	GroupId string `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	// Strategy to use.
	PlacementStrategy EPlacementStrategy `protobuf:"varint,3,opt,name=PlacementStrategy,proto3,enum=NCloud.NBlockStore.NProto.EPlacementStrategy" json:"PlacementStrategy,omitempty"`
	// Number of placement partitions.
	// Used for PLACEMENT_STRATEGY_PARTITION PlacementStrategy.
	PlacementPartitionCount uint32 `protobuf:"varint,4,opt,name=PlacementPartitionCount,proto3" json:"PlacementPartitionCount,omitempty"`
}

func (x *TCreatePlacementGroupRequest) Reset() {
	*x = TCreatePlacementGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreatePlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreatePlacementGroupRequest) ProtoMessage() {}

func (x *TCreatePlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreatePlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*TCreatePlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{2}
}

func (x *TCreatePlacementGroupRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TCreatePlacementGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TCreatePlacementGroupRequest) GetPlacementStrategy() EPlacementStrategy {
	if x != nil {
		return x.PlacementStrategy
	}
	return EPlacementStrategy_PLACEMENT_STRATEGY_SPREAD
}

func (x *TCreatePlacementGroupRequest) GetPlacementPartitionCount() uint32 {
	if x != nil {
		return x.PlacementPartitionCount
	}
	return 0
}

type TCreatePlacementGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TCreatePlacementGroupResponse) Reset() {
	*x = TCreatePlacementGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreatePlacementGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreatePlacementGroupResponse) ProtoMessage() {}

func (x *TCreatePlacementGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreatePlacementGroupResponse.ProtoReflect.Descriptor instead.
func (*TCreatePlacementGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{3}
}

func (x *TCreatePlacementGroupResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TDestroyPlacementGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Id of the group.
	GroupId string `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
}

func (x *TDestroyPlacementGroupRequest) Reset() {
	*x = TDestroyPlacementGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDestroyPlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDestroyPlacementGroupRequest) ProtoMessage() {}

func (x *TDestroyPlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDestroyPlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*TDestroyPlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{4}
}

func (x *TDestroyPlacementGroupRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TDestroyPlacementGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type TDestroyPlacementGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TDestroyPlacementGroupResponse) Reset() {
	*x = TDestroyPlacementGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDestroyPlacementGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDestroyPlacementGroupResponse) ProtoMessage() {}

func (x *TDestroyPlacementGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDestroyPlacementGroupResponse.ProtoReflect.Descriptor instead.
func (*TDestroyPlacementGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{5}
}

func (x *TDestroyPlacementGroupResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TAlterPlacementGroupMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Id of the group.
	GroupId string `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	// Add these disks to the group.
	DisksToAdd []string `protobuf:"bytes,3,rep,name=DisksToAdd,proto3" json:"DisksToAdd,omitempty"`
	// Remove these disks from the group.
	DisksToRemove []string `protobuf:"bytes,4,rep,name=DisksToRemove,proto3" json:"DisksToRemove,omitempty"`
	// Placement group configuration version this alter applies to.
	ConfigVersion uint32 `protobuf:"varint,5,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	// Index of the partition inside placement group.
	// Takes values from 1 to PlacementPartitionCount.
	PlacementPartitionIndex uint32 `protobuf:"varint,6,opt,name=PlacementPartitionIndex,proto3" json:"PlacementPartitionIndex,omitempty"`
}

func (x *TAlterPlacementGroupMembershipRequest) Reset() {
	*x = TAlterPlacementGroupMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAlterPlacementGroupMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAlterPlacementGroupMembershipRequest) ProtoMessage() {}

func (x *TAlterPlacementGroupMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAlterPlacementGroupMembershipRequest.ProtoReflect.Descriptor instead.
func (*TAlterPlacementGroupMembershipRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{6}
}

func (x *TAlterPlacementGroupMembershipRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TAlterPlacementGroupMembershipRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TAlterPlacementGroupMembershipRequest) GetDisksToAdd() []string {
	if x != nil {
		return x.DisksToAdd
	}
	return nil
}

func (x *TAlterPlacementGroupMembershipRequest) GetDisksToRemove() []string {
	if x != nil {
		return x.DisksToRemove
	}
	return nil
}

func (x *TAlterPlacementGroupMembershipRequest) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *TAlterPlacementGroupMembershipRequest) GetPlacementPartitionIndex() uint32 {
	if x != nil {
		return x.PlacementPartitionIndex
	}
	return 0
}

type TAlterPlacementGroupMembershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Filled only if a non-retriable error occurred.
	DisksImpossibleToAdd []string `protobuf:"bytes,2,rep,name=DisksImpossibleToAdd,proto3" json:"DisksImpossibleToAdd,omitempty"`
}

func (x *TAlterPlacementGroupMembershipResponse) Reset() {
	*x = TAlterPlacementGroupMembershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAlterPlacementGroupMembershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAlterPlacementGroupMembershipResponse) ProtoMessage() {}

func (x *TAlterPlacementGroupMembershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAlterPlacementGroupMembershipResponse.ProtoReflect.Descriptor instead.
func (*TAlterPlacementGroupMembershipResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{7}
}

func (x *TAlterPlacementGroupMembershipResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TAlterPlacementGroupMembershipResponse) GetDisksImpossibleToAdd() []string {
	if x != nil {
		return x.DisksImpossibleToAdd
	}
	return nil
}

type TListPlacementGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TListPlacementGroupsRequest) Reset() {
	*x = TListPlacementGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListPlacementGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListPlacementGroupsRequest) ProtoMessage() {}

func (x *TListPlacementGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListPlacementGroupsRequest.ProtoReflect.Descriptor instead.
func (*TListPlacementGroupsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{8}
}

func (x *TListPlacementGroupsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TListPlacementGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// List of group ids.
	GroupIds []string `protobuf:"bytes,2,rep,name=GroupIds,proto3" json:"GroupIds,omitempty"`
}

func (x *TListPlacementGroupsResponse) Reset() {
	*x = TListPlacementGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListPlacementGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListPlacementGroupsResponse) ProtoMessage() {}

func (x *TListPlacementGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListPlacementGroupsResponse.ProtoReflect.Descriptor instead.
func (*TListPlacementGroupsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{9}
}

func (x *TListPlacementGroupsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TListPlacementGroupsResponse) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type TDescribePlacementGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// Id of the group.
	GroupId string `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
}

func (x *TDescribePlacementGroupRequest) Reset() {
	*x = TDescribePlacementGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribePlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribePlacementGroupRequest) ProtoMessage() {}

func (x *TDescribePlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribePlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*TDescribePlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{10}
}

func (x *TDescribePlacementGroupRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TDescribePlacementGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type TDescribePlacementGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Placement group information.
	Group *TPlacementGroup `protobuf:"bytes,2,opt,name=Group,proto3" json:"Group,omitempty"`
}

func (x *TDescribePlacementGroupResponse) Reset() {
	*x = TDescribePlacementGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribePlacementGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribePlacementGroupResponse) ProtoMessage() {}

func (x *TDescribePlacementGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribePlacementGroupResponse.ProtoReflect.Descriptor instead.
func (*TDescribePlacementGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP(), []int{11}
}

func (x *TDescribePlacementGroupResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TDescribePlacementGroupResponse) GetGroup() *TPlacementGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_cloud_blockstore_public_api_protos_placement_proto protoreflect.FileDescriptor

var file_cloud_blockstore_public_api_protos_placement_proto_rawDesc = []byte{
	0x0a, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x30, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x17, 0x54, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x49,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x4d, 0x61,
	0x78, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x98, 0x02,
	0x0a, 0x0f, 0x54, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x11, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x6b,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x63, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x38,
	0x0a, 0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x1c, 0x54, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x5b, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e,
	0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x11, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x38, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x1d, 0x54, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x78, 0x0a, 0x1d, 0x54, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x1e, 0x54, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xa6, 0x02, 0x0a, 0x25, 0x54, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x54, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x6b,
	0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x17, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x89, 0x01, 0x0a, 0x26, 0x54, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x32, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x14, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x22, 0x5c, 0x0a, 0x1b, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x1c, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x79, 0x0a, 0x1e,
	0x54, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x1f, 0x54, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2a, 0x55, 0x0a, 0x12, 0x45, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x53, 0x50, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x42, 0x35, 0x5a, 0x33, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_blockstore_public_api_protos_placement_proto_rawDescOnce sync.Once
	file_cloud_blockstore_public_api_protos_placement_proto_rawDescData = file_cloud_blockstore_public_api_protos_placement_proto_rawDesc
)

func file_cloud_blockstore_public_api_protos_placement_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_public_api_protos_placement_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_public_api_protos_placement_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_public_api_protos_placement_proto_rawDescData)
	})
	return file_cloud_blockstore_public_api_protos_placement_proto_rawDescData
}

var file_cloud_blockstore_public_api_protos_placement_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_blockstore_public_api_protos_placement_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cloud_blockstore_public_api_protos_placement_proto_goTypes = []interface{}{
	(EPlacementStrategy)(0),                        // 0: NCloud.NBlockStore.NProto.EPlacementStrategy
	(*TPlacementGroupSettings)(nil),                // 1: NCloud.NBlockStore.NProto.TPlacementGroupSettings
	(*TPlacementGroup)(nil),                        // 2: NCloud.NBlockStore.NProto.TPlacementGroup
	(*TCreatePlacementGroupRequest)(nil),           // 3: NCloud.NBlockStore.NProto.TCreatePlacementGroupRequest
	(*TCreatePlacementGroupResponse)(nil),          // 4: NCloud.NBlockStore.NProto.TCreatePlacementGroupResponse
	(*TDestroyPlacementGroupRequest)(nil),          // 5: NCloud.NBlockStore.NProto.TDestroyPlacementGroupRequest
	(*TDestroyPlacementGroupResponse)(nil),         // 6: NCloud.NBlockStore.NProto.TDestroyPlacementGroupResponse
	(*TAlterPlacementGroupMembershipRequest)(nil),  // 7: NCloud.NBlockStore.NProto.TAlterPlacementGroupMembershipRequest
	(*TAlterPlacementGroupMembershipResponse)(nil), // 8: NCloud.NBlockStore.NProto.TAlterPlacementGroupMembershipResponse
	(*TListPlacementGroupsRequest)(nil),            // 9: NCloud.NBlockStore.NProto.TListPlacementGroupsRequest
	(*TListPlacementGroupsResponse)(nil),           // 10: NCloud.NBlockStore.NProto.TListPlacementGroupsResponse
	(*TDescribePlacementGroupRequest)(nil),         // 11: NCloud.NBlockStore.NProto.TDescribePlacementGroupRequest
	(*TDescribePlacementGroupResponse)(nil),        // 12: NCloud.NBlockStore.NProto.TDescribePlacementGroupResponse
	(*THeaders)(nil),                               // 13: NCloud.NBlockStore.NProto.THeaders
	(*protos.TError)(nil),                          // 14: NCloud.NProto.TError
}
var file_cloud_blockstore_public_api_protos_placement_proto_depIdxs = []int32{
	0,  // 0: NCloud.NBlockStore.NProto.TPlacementGroup.PlacementStrategy:type_name -> NCloud.NBlockStore.NProto.EPlacementStrategy
	13, // 1: NCloud.NBlockStore.NProto.TCreatePlacementGroupRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	0,  // 2: NCloud.NBlockStore.NProto.TCreatePlacementGroupRequest.PlacementStrategy:type_name -> NCloud.NBlockStore.NProto.EPlacementStrategy
	14, // 3: NCloud.NBlockStore.NProto.TCreatePlacementGroupResponse.Error:type_name -> NCloud.NProto.TError
	13, // 4: NCloud.NBlockStore.NProto.TDestroyPlacementGroupRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	14, // 5: NCloud.NBlockStore.NProto.TDestroyPlacementGroupResponse.Error:type_name -> NCloud.NProto.TError
	13, // 6: NCloud.NBlockStore.NProto.TAlterPlacementGroupMembershipRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	14, // 7: NCloud.NBlockStore.NProto.TAlterPlacementGroupMembershipResponse.Error:type_name -> NCloud.NProto.TError
	13, // 8: NCloud.NBlockStore.NProto.TListPlacementGroupsRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	14, // 9: NCloud.NBlockStore.NProto.TListPlacementGroupsResponse.Error:type_name -> NCloud.NProto.TError
	13, // 10: NCloud.NBlockStore.NProto.TDescribePlacementGroupRequest.Headers:type_name -> NCloud.NBlockStore.NProto.THeaders
	14, // 11: NCloud.NBlockStore.NProto.TDescribePlacementGroupResponse.Error:type_name -> NCloud.NProto.TError
	2,  // 12: NCloud.NBlockStore.NProto.TDescribePlacementGroupResponse.Group:type_name -> NCloud.NBlockStore.NProto.TPlacementGroup
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_public_api_protos_placement_proto_init() }
func file_cloud_blockstore_public_api_protos_placement_proto_init() {
	if File_cloud_blockstore_public_api_protos_placement_proto != nil {
		return
	}
	file_cloud_blockstore_public_api_protos_headers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPlacementGroupSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPlacementGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreatePlacementGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreatePlacementGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDestroyPlacementGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDestroyPlacementGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAlterPlacementGroupMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAlterPlacementGroupMembershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListPlacementGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListPlacementGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribePlacementGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_placement_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribePlacementGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_public_api_protos_placement_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_public_api_protos_placement_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_public_api_protos_placement_proto_depIdxs,
		EnumInfos:         file_cloud_blockstore_public_api_protos_placement_proto_enumTypes,
		MessageInfos:      file_cloud_blockstore_public_api_protos_placement_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_public_api_protos_placement_proto = out.File
	file_cloud_blockstore_public_api_protos_placement_proto_rawDesc = nil
	file_cloud_blockstore_public_api_protos_placement_proto_goTypes = nil
	file_cloud_blockstore_public_api_protos_placement_proto_depIdxs = nil
}
