// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: cloud/blockstore/public/api/protos/encryption.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EEncryptionMode int32

const (
	EEncryptionMode_NO_ENCRYPTION      EEncryptionMode = 0
	EEncryptionMode_ENCRYPTION_AES_XTS EEncryptionMode = 1
)

// Enum value maps for EEncryptionMode.
var (
	EEncryptionMode_name = map[int32]string{
		0: "NO_ENCRYPTION",
		1: "ENCRYPTION_AES_XTS",
	}
	EEncryptionMode_value = map[string]int32{
		"NO_ENCRYPTION":      0,
		"ENCRYPTION_AES_XTS": 1,
	}
)

func (x EEncryptionMode) Enum() *EEncryptionMode {
	p := new(EEncryptionMode)
	*p = x
	return p
}

func (x EEncryptionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EEncryptionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_blockstore_public_api_protos_encryption_proto_enumTypes[0].Descriptor()
}

func (EEncryptionMode) Type() protoreflect.EnumType {
	return &file_cloud_blockstore_public_api_protos_encryption_proto_enumTypes[0]
}

func (x EEncryptionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EEncryptionMode.Descriptor instead.
func (EEncryptionMode) EnumDescriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_encryption_proto_rawDescGZIP(), []int{0}
}

type TKmsKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of the key in KMS.
	KekId string `protobuf:"bytes,1,opt,name=KekId,proto3" json:"KekId,omitempty"`
	// Encrypted Data Encryption Key.
	EncryptedDEK []byte `protobuf:"bytes,2,opt,name=EncryptedDEK,proto3" json:"EncryptedDEK,omitempty"`
	// Identifier of the compute task to get iam-token.
	TaskId string `protobuf:"bytes,3,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
}

func (x *TKmsKey) Reset() {
	*x = TKmsKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TKmsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TKmsKey) ProtoMessage() {}

func (x *TKmsKey) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TKmsKey.ProtoReflect.Descriptor instead.
func (*TKmsKey) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_encryption_proto_rawDescGZIP(), []int{0}
}

func (x *TKmsKey) GetKekId() string {
	if x != nil {
		return x.KekId
	}
	return ""
}

func (x *TKmsKey) GetEncryptedDEK() []byte {
	if x != nil {
		return x.EncryptedDEK
	}
	return nil
}

func (x *TKmsKey) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type TKeyPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Path:
	//	*TKeyPath_KeyringId
	//	*TKeyPath_FilePath
	//	*TKeyPath_KmsKey
	Path isTKeyPath_Path `protobuf_oneof:"Path"`
}

func (x *TKeyPath) Reset() {
	*x = TKeyPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TKeyPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TKeyPath) ProtoMessage() {}

func (x *TKeyPath) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TKeyPath.ProtoReflect.Descriptor instead.
func (*TKeyPath) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_encryption_proto_rawDescGZIP(), []int{1}
}

func (m *TKeyPath) GetPath() isTKeyPath_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (x *TKeyPath) GetKeyringId() uint32 {
	if x, ok := x.GetPath().(*TKeyPath_KeyringId); ok {
		return x.KeyringId
	}
	return 0
}

func (x *TKeyPath) GetFilePath() []byte {
	if x, ok := x.GetPath().(*TKeyPath_FilePath); ok {
		return x.FilePath
	}
	return nil
}

func (x *TKeyPath) GetKmsKey() *TKmsKey {
	if x, ok := x.GetPath().(*TKeyPath_KmsKey); ok {
		return x.KmsKey
	}
	return nil
}

type isTKeyPath_Path interface {
	isTKeyPath_Path()
}

type TKeyPath_KeyringId struct {
	// Identifier of the keyring containing the key.
	KeyringId uint32 `protobuf:"varint,1,opt,name=KeyringId,proto3,oneof"`
}

type TKeyPath_FilePath struct {
	// Path to the file containing the key.
	FilePath []byte `protobuf:"bytes,2,opt,name=FilePath,proto3,oneof"`
}

type TKeyPath_KmsKey struct {
	// KMS key options
	KmsKey *TKmsKey `protobuf:"bytes,3,opt,name=KmsKey,proto3,oneof"`
}

func (*TKeyPath_KeyringId) isTKeyPath_Path() {}

func (*TKeyPath_FilePath) isTKeyPath_Path() {}

func (*TKeyPath_KmsKey) isTKeyPath_Path() {}

type TEncryptionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Encryption mode.
	Mode EEncryptionMode `protobuf:"varint,1,opt,name=Mode,proto3,enum=NCloud.NBlockStore.NProto.EEncryptionMode" json:"Mode,omitempty"`
	// Types that are assignable to KeyParam:
	//	*TEncryptionSpec_KeyPath
	//	*TEncryptionSpec_KeyHash
	KeyParam isTEncryptionSpec_KeyParam `protobuf_oneof:"KeyParam"`
}

func (x *TEncryptionSpec) Reset() {
	*x = TEncryptionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEncryptionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEncryptionSpec) ProtoMessage() {}

func (x *TEncryptionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEncryptionSpec.ProtoReflect.Descriptor instead.
func (*TEncryptionSpec) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_public_api_protos_encryption_proto_rawDescGZIP(), []int{2}
}

func (x *TEncryptionSpec) GetMode() EEncryptionMode {
	if x != nil {
		return x.Mode
	}
	return EEncryptionMode_NO_ENCRYPTION
}

func (m *TEncryptionSpec) GetKeyParam() isTEncryptionSpec_KeyParam {
	if m != nil {
		return m.KeyParam
	}
	return nil
}

func (x *TEncryptionSpec) GetKeyPath() *TKeyPath {
	if x, ok := x.GetKeyParam().(*TEncryptionSpec_KeyPath); ok {
		return x.KeyPath
	}
	return nil
}

func (x *TEncryptionSpec) GetKeyHash() []byte {
	if x, ok := x.GetKeyParam().(*TEncryptionSpec_KeyHash); ok {
		return x.KeyHash
	}
	return nil
}

type isTEncryptionSpec_KeyParam interface {
	isTEncryptionSpec_KeyParam()
}

type TEncryptionSpec_KeyPath struct {
	// Encryption key path.
	KeyPath *TKeyPath `protobuf:"bytes,2,opt,name=KeyPath,proto3,oneof"`
}

type TEncryptionSpec_KeyHash struct {
	// Encryption key hash for snapshot.
	KeyHash []byte `protobuf:"bytes,3,opt,name=KeyHash,proto3,oneof"`
}

func (*TEncryptionSpec_KeyPath) isTEncryptionSpec_KeyParam() {}

func (*TEncryptionSpec_KeyHash) isTEncryptionSpec_KeyParam() {}

var File_cloud_blockstore_public_api_protos_encryption_proto protoreflect.FileDescriptor

var file_cloud_blockstore_public_api_protos_encryption_proto_rawDesc = []byte{
	0x0a, 0x33, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5b, 0x0a, 0x07, 0x54, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4b,
	0x65, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x65, 0x6b, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x45,
	0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x44, 0x45, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x08, 0x54, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x09, 0x4b, 0x65,
	0x79, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x09, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x06, 0x4b, 0x6d, 0x73, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x06,
	0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0xba,
	0x01, 0x0a, 0x0f, 0x54, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x3e, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x0a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2a, 0x3c, 0x0a, 0x0f, 0x45,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x45, 0x53, 0x5f, 0x58, 0x54, 0x53, 0x10, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x61, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_blockstore_public_api_protos_encryption_proto_rawDescOnce sync.Once
	file_cloud_blockstore_public_api_protos_encryption_proto_rawDescData = file_cloud_blockstore_public_api_protos_encryption_proto_rawDesc
)

func file_cloud_blockstore_public_api_protos_encryption_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_public_api_protos_encryption_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_public_api_protos_encryption_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_public_api_protos_encryption_proto_rawDescData)
	})
	return file_cloud_blockstore_public_api_protos_encryption_proto_rawDescData
}

var file_cloud_blockstore_public_api_protos_encryption_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cloud_blockstore_public_api_protos_encryption_proto_goTypes = []interface{}{
	(EEncryptionMode)(0),    // 0: NCloud.NBlockStore.NProto.EEncryptionMode
	(*TKmsKey)(nil),         // 1: NCloud.NBlockStore.NProto.TKmsKey
	(*TKeyPath)(nil),        // 2: NCloud.NBlockStore.NProto.TKeyPath
	(*TEncryptionSpec)(nil), // 3: NCloud.NBlockStore.NProto.TEncryptionSpec
}
var file_cloud_blockstore_public_api_protos_encryption_proto_depIdxs = []int32{
	1, // 0: NCloud.NBlockStore.NProto.TKeyPath.KmsKey:type_name -> NCloud.NBlockStore.NProto.TKmsKey
	0, // 1: NCloud.NBlockStore.NProto.TEncryptionSpec.Mode:type_name -> NCloud.NBlockStore.NProto.EEncryptionMode
	2, // 2: NCloud.NBlockStore.NProto.TEncryptionSpec.KeyPath:type_name -> NCloud.NBlockStore.NProto.TKeyPath
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_public_api_protos_encryption_proto_init() }
func file_cloud_blockstore_public_api_protos_encryption_proto_init() {
	if File_cloud_blockstore_public_api_protos_encryption_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TKmsKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TKeyPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEncryptionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TKeyPath_KeyringId)(nil),
		(*TKeyPath_FilePath)(nil),
		(*TKeyPath_KmsKey)(nil),
	}
	file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TEncryptionSpec_KeyPath)(nil),
		(*TEncryptionSpec_KeyHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_public_api_protos_encryption_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_public_api_protos_encryption_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_public_api_protos_encryption_proto_depIdxs,
		EnumInfos:         file_cloud_blockstore_public_api_protos_encryption_proto_enumTypes,
		MessageInfos:      file_cloud_blockstore_public_api_protos_encryption_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_public_api_protos_encryption_proto = out.File
	file_cloud_blockstore_public_api_protos_encryption_proto_rawDesc = nil
	file_cloud_blockstore_public_api_protos_encryption_proto_goTypes = nil
	file_cloud_blockstore_public_api_protos_encryption_proto_depIdxs = nil
}
